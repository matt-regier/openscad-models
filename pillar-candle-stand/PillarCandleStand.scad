// I need 2D curves because I'm going to rotate_extrude them.
// Thank you, https://benjaminwand.github.io/verbose-cv/projects/bezier_curves.html

// --- VARIABLES ---
// roughly the size of parts of curves
fs=3;
$fn=36; // increase for rotational smoothness
debug=false;

// --- FUNCTIONS ---
// https://benjaminwand.github.io/verbose-cv/projects/bezier_curves.html
// calculates the amount of points
// from distance of two points and fs
function fn(a, b) =
  round(sqrt(pow(a[0]-b[0],2)
  + pow(a[1]-b[1], 2))/fs);

// calculate each individual point
function b_pts(pts, n, idx) =
  len(pts)>2 ?
    b_pts([for(i=[0:len(pts)-2])
        pts[i]], n, idx) * n*idx
      + b_pts([for(i=[1:len(pts)-1])
        pts[i]], n, idx) * (1-n*idx)
    : pts[0] * n*idx
      + pts[1] * (1-n*idx);

// calculate fn() for given points,
// call b_pts() and concatenate points
function b_curv(pts) =
  let (fn=fn(pts[0], pts[len(pts)-1]))
    [for (i= [0:fn])
      concat(b_pts(pts, 1/fn, i))];

// --- END FUNCTIONS ---

// displaying points as a rainbow
// module rainbow (points) {
// for (i= [0 : len(points)-1 ])
//   color([cos(20*i)/2+0.5,
//     -sin(20*i)/2+0.5,
//     -cos(20*i)/2+0.5,
//     1])
//   translate(points[i]) sphere(0.5, $fn=180);
// }

// --- THE ACTUAL MODEL ---
// calculating the points
// rainbow_points = b_curv([p1, p2, p3, p4]);

// displaying the calculated points
//rainbow(rainbow_points);
//polygon(points = rainbow_points);

// displaying [p1 .. p4]
// for (i=[p1, p2, p3, p4])
//   translate(i) color("black")
//     cylinder(1, 0.2, 0.2, $fn=10);

set_1_points = [
  [0,0],[50,0],[55,0],[60,5],[55,10],[50,10],[12.5,15],[7.5,30],[7.5,30],[7.5,30],[12.5,45],[31.25,50],[36.25,50],[41.25,55],[36.25,60],[0,60]
  ];
// curve_1_points = b_curv(set_1_points);
// fs=3; curve_1_points=[[0, 60], [20.0903, 58.9604], [29.5934, 56.7275], [32.3846, 54.0521], [30.9935, 51.0765], [27.2827, 47.7213], [22.7606, 43.9649], [18.6588, 39.9057], [15.934, 35.6901], [15.2597, 31.4269], [17.0055, 27.1652], [21.1838, 22.9358], [27.3789, 18.8044], [34.7183, 14.8849], [41.9504, 11.2987], [47.6486, 8.11678], [50.4558, 5.34697], [49.1746, 3.00386], [42.4532, 1.21399], [27.8388, 0.208654], [0, 0]];
// fs=0.5; curve_1_points=[[0, 60], [4.30891, 59.9649], [8.19458, 59.8646], [11.6878, 59.707], [14.8172, 59.4993], [17.6098, 59.2483], [20.0903, 58.9604], [22.2818, 58.6411], [24.2056, 58.2955], [25.8812, 57.928], [27.3267, 57.5422], [28.559, 57.1413], [29.5934, 56.7275], [30.4443, 56.3029], [31.1251, 55.8689], [31.6482, 55.4264], [32.0252, 54.976], [32.2672, 54.5179], [32.3846, 54.0521], [32.3871, 53.5785], [32.2843, 53.0966], [32.085, 52.6059], [31.798, 52.106], [31.4315, 51.5964], [30.9935, 51.0765], [30.4918, 50.5458], [29.9339, 50.004], [29.3271, 49.4507], [28.6784, 48.8859], [27.9948, 48.3094], [27.2827, 47.7213], [26.5488, 47.1217], [25.7991, 46.511], [25.0397, 45.8894], [24.2765, 45.2575], [23.515, 44.6158], [22.7606, 43.9649], [22.0185, 43.3054], [21.2936, 42.6382], [20.5908, 41.9639], [19.9146, 41.2832], [19.2692, 40.5969], [18.6588, 39.9057], [18.0873, 39.2103], [17.5584, 38.5112], [17.0754, 37.8092], [16.6418, 37.1047], [16.2603, 36.3982], [15.934, 35.6901], [15.6653, 34.9809], [15.4565, 34.2709], [15.3099, 33.5603], [15.2271, 32.8493], [15.21, 32.1381], [15.2597, 31.4269], [15.3775, 30.7158], [15.5641, 30.0049], [15.8201, 29.2942], [16.1458, 28.584], [16.541, 27.8743], [17.0055, 27.1652], [17.5386, 26.457], [18.1391, 25.7497], [18.8058, 25.0436], [19.5369, 24.3391], [20.3304, 23.6364], [21.1838, 22.9358], [22.0942, 22.2379], [23.0586, 21.543], [24.0733, 20.8516], [25.1345, 20.1644], [26.2379, 19.4818], [27.3789, 18.8044], [28.5526, 18.1329], [29.7537, 17.4679], [30.9768, 16.81], [32.2159, 16.1598], [33.4652, 15.5179], [34.7183, 14.8849], [35.9688, 14.2613], [37.2102, 13.6475], [38.4358, 13.044], [39.6389, 12.4512], [40.8127, 11.8694], [41.9504, 11.2987], [43.0453, 10.7395], [44.0907, 10.1918], [45.0801, 9.65568], [46.0071, 9.13116], [46.8653, 8.61821], [47.6486, 8.11678], [48.3512, 7.6268], [48.9672, 7.1482], [49.4911, 6.68092], [49.9173, 6.22493], [50.2406, 5.78025], [50.4558, 5.34697], [50.5575, 4.92527], [50.5405, 4.5154], [50.3995, 4.11775], [50.1289, 3.73283], [49.7227, 3.36128], [49.1746, 3.00386], [48.4776, 2.66148], [47.6241, 2.33515], [46.6053, 2.026], [45.4115, 1.73526], [44.0317, 1.46417], [42.4532, 1.21399], [40.6616, 0.985964], [38.6404, 0.781188], [36.3706, 0.600597], [33.8307, 0.444855], [30.9961, 0.314263], [27.8388, 0.208654], [24.3268, 0.127277], [20.4241, 0.0686665], [16.0895, 0.0305127], [11.2768, 0.00951823], [5.93337, 0.00125194], [0, 0]];
curve_1_points=[[0, 60], [4.30891, 59.9649], [8.19458, 59.8646], [11.6878, 59.707], [14.8172, 59.4993], [17.6098, 59.2483], [20.0903, 58.9604], [22.2818, 58.6411], [24.2056, 58.2955], [25.8812, 57.928], [27.3267, 57.5422], [28.559, 57.1413], [29.5934, 56.7275], [30.4443, 56.3029], [31.1251, 55.8689], [31.6482, 55.4264], [32.0252, 54.976], [32.2672, 54.5179], [32.3846, 54.0521], [32.3871, 53.5785], [32.2843, 53.0966], [32.085, 52.6059], [31.798, 52.106], [31.4315, 51.5964], [30.9935, 51.0765], [30.4918, 50.5458], [29.9339, 50.004], [29.3271, 49.4507], [28.6784, 48.8859], [27.9948, 48.3094], [27.2827, 47.7213], [26.5488, 47.1217], [25.7991, 46.511], [25.0397, 45.8894], [24.2765, 45.2575], [23.515, 44.6158], [22.7606, 43.9649], [22.0185, 43.3054], [21.2936, 42.6382], [20.5908, 41.9639], [19.9146, 41.2832], [19.2692, 40.5969], [18.6588, 39.9057], [18.0873, 39.2103], [17.5584, 38.5112], [17.0754, 37.8092], [16.6418, 37.1047], [16.2603, 36.3982], [15.934, 35.6901], [15.6653, 34.9809], [15.4565, 34.2709], [15.3099, 33.5603], [15.2271, 32.8493], [15.21, 32.1381], [15.2597, 31.4269], [15.3775, 30.7158], [15.5641, 30.0049], [15.8201, 29.2942], [16.1458, 28.584], [16.541, 27.8743], [17.0055, 27.1652], [17.5386, 26.457], [18.1391, 25.7497], [18.8058, 25.0436], [19.5369, 24.3391], [20.3304, 23.6364], [21.1838, 22.9358], [22.0942, 22.2379], [23.0586, 21.543], [24.0733, 20.8516], [25.1345, 20.1644], [26.2379, 19.4818], [27.3789, 18.8044], [28.5526, 18.1329], [29.7537, 17.4679], [30.9768, 16.81], [32.2159, 16.1598], [33.4652, 15.5179], [34.7183, 14.8849], [35.9688, 14.2613], [37.2102, 13.6475], [38.4358, 13.044], [39.6389, 12.4512], [40.8127, 11.8694], [41.9504, 11.2987], [43.0453, 10.7395], [44.0907, 10.1918], [45.0801, 9.65568], [46.0071, 9.13116], [46.8653, 8.61821], [47.6486, 8.11678], [48.3512, 7.6268], [48.9672, 7.1482], [49.4911, 6.68092], [49.9173, 6.22493], [50.2406, 5.78025], [50.4558, 5.34697], [50.5575, 4.92527], [50.5405, 4.5154], [50.3995, 4.11775], [50.1289, 3.73283], [49.7227, 3.36128], [49.1746, 3.00386], [48.4776, 2.66148], [47.6241, 2.33515], [46.6053, 2.026], [45.4115, 1.73526], [44.0317, 1.46417], [42.4532, 1.21399], [40.6616, 0.985964], [38.6404, 0.781188], [36.3706, 0.600597], [33.8307, 0.444855], [30.9961, 0.314263], [27.8388, 0.208654], [24.3268, 0.127277], [20.4241, 0.0686665], [16.0895, 0.0305127], [11.2768, 0.00951823], [5.93337, 0.00125194], [0, 0]];

// set_2_points = [
//   ,[36.25,60],[31.25,60],[12.5,65],[7.5,80],[7.5,80],[7.5,80],[12.5,95],[50,100],[55,100],[60,105],[55,110],[50,110],[0,110]
//   ];
// curve_2_points = b_curv(set_2_points);

echo("set_1_points", set_1_points);
echo("curve_1_points", curve_1_points);
echo("set_1_points_count", len(set_1_points));
echo("curve_1_points_count", len(curve_1_points));

// echo("set_2_points", set_2_points);
// echo("curve_2_points", curve_2_points);
// echo("set_2_points_count", len(set_2_points));
// echo("curve_2_points_count", len(curve_2_points));

cylinder_height=9*2.54*10;
cylinder_diameter=75;
cylinder_radius=cylinder_diameter/2;
if (debug) {
  echo("cylinder_height", cylinder_height);
  echo("cylinder_diameter", cylinder_diameter);
  echo("cylinder_radius", cylinder_radius);
}

polygon_flip_offset=108;
lip_height=20;
lip_radius=5;
base_radius=cylinder_radius+cylinder_radius/8;

module stand() {
  // polygon(points=my_points);

  // rotate_extrude() {
  //   polygon(points=my_points);
  //   translate([cylinder_radius,110,0]) square(5);
  //   translate([cylinder_radius,115,0]) square(5);
  //   translate([cylinder_radius+5/2,120,0]) circle(5/2);
  // }

  // polygon(points=curve_2_points);

  rotate_extrude() {
    polygon(points=curve_1_points);
    translate([0,polygon_flip_offset,0]) mirror([0,1,0]) polygon(points=curve_1_points);
    translate([0,polygon_flip_offset,0]) polygon(points=[[cylinder_radius+0,0],[cylinder_radius+lip_radius,0],[cylinder_radius+lip_radius,lip_height],[cylinder_radius+0,lip_height]]);
    translate([cylinder_radius+5/2,polygon_flip_offset+lip_height,0]) circle(5/2);
  }

  // rotate_extrude() {
  //  polygon(points=curve_1_points);
  //  polygon(points=curve_2_points);
  //   translate([cylinder_radius,110,0]) square(5);
  //   translate([cylinder_radius,115,0]) square(5);
  //   translate([cylinder_radius+5/2,120,0]) circle(5/2);
  // }

  echo("base_radius", base_radius);
  color("cyan") cylinder(5,base_radius,base_radius);
  color("red") translate([0,0,polygon_flip_offset-5]) cylinder(5,cylinder_radius+lip_radius,cylinder_radius+lip_radius);
}

difference() {
  stand();
  translate([0,0,polygon_flip_offset-5.4]) cylinder(cylinder_height, cylinder_radius, cylinder_radius);
}
